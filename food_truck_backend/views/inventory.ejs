<%- include('./includes/header.ejs') %>
<div class="container">
  <div class="container-fluid content-inner mt-5 py-0">
    <div class="row">
      <div class="col-sm-12">
        <div class="card">
          <div class="card-header d-flex justify-content-between">
            <div class="header-title">
              <h4 class="card-title">Inventory Items</h4>
            </div>
          </div>
          <div class="card-body">
            <div class="table-responsive">
              <% const inventoryArray = []; %>
              <table
                id="datatable"
                class="table table-striped"
                data-toggle="data-table"
              >
                <thead>
                  <tr>
                    <th>Item</th>
                    <th>Quantity</th>
                    <th>Days to Expire</th>
                    <th>Recipe</th>
                    <!-- New column for the button -->
                  </tr>
                </thead>
                <tbody>
                  <% for (const itemName in response[0].inventoryItems) { %> <%
                  const daysToAdd = [3, 4, 5]; %> <% const randomDays =
                  daysToAdd[Math.floor(Math.random() * daysToAdd.length)]; %> <%
                  const expiryDate = new Date(); %> <%
                  expiryDate.setDate(expiryDate.getDate() + randomDays); %> <%
                  const daysRemaining = Math.ceil((expiryDate - new Date()) /
                  (1000 * 60 * 60 * 24)); %> <% const inventoryItem = {
                  itemName: itemName, quantity:
                  response[0].inventoryItems[itemName], daysToExpire:
                  `${daysRemaining} days` }; %> <%
                  inventoryArray.push(inventoryItem); %>
                  <tr>
                    <td><%= inventoryItem.itemName %></td>
                    <td><%= inventoryItem.quantity %></td>
                    <td><%= inventoryItem.daysToExpire %></td>
                    <td id="<%= `recipe-${inventoryItem.itemName}` %>">
                      Loading...
                    </td>
                  </tr>
                  <script>
                    // JavaScript code to fetch and update the recipe for each item
                    const itemName<%= inventoryItem.itemName %> = '<%= inventoryItem.itemName %>';
                    const quantity<%= inventoryItem.itemName %> = '<%= inventoryItem.quantity %>';

                    fetch(`/generate-recipe?itemName=${itemName<%= inventoryItem.itemName %>}&quantity=${quantity<%= inventoryItem.itemName %>}`)
                    .then(response => response.json())
                    .then(data => {
                        document.getElementById(`<%= `recipe-${inventoryItem.itemName}` %>`).textContent = data.recipe;
                      })
                      .catch(error => console.error(`Error fetching recipe for ${inventoryItem.itemName}: ${error.message}`));
                  </script>
                  <% } %>
                </tbody>
              </table>
              <button class="btn btn-info" onclick="showRecipe()">
                Show Recipe
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Recipe Display Section -->
<!-- <div id="recipeDisplay" class="mt-3">
  <h4>Recipe Display</h4>
  <p id="selectedRecipe">Select an item to view the recipe.</p>
</div> -->

<%- include('./includes/footer.ejs') %>

<script>
  // JavaScript function to show the recipe for a specific item
  function showRecipe(itemName) {
    const recipeContainer = document.getElementById("recipeDisplay");
    const selectedRecipe = document.getElementById("selectedRecipe");

    // Fetch and update the recipe for the selected item
    fetch(
      `/generate-recipe?itemName=${itemName}&quantity=${inventoryItem.quantity}`
    )
      .then((response) => response.json())
      .then((data) => {
        selectedRecipe.textContent = `Recipe for ${itemName}: ${data.recipe}`;
      })
      .catch((error) =>
        console.error(`Error fetching recipe for ${itemName}: ${error.message}`)
      );

    // Show the recipe display container
    recipeContainer.style.display = "block";
  }
</script>
